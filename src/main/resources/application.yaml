# server config
server:
  host: ${SERVER_HOST:localhost}
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${SERVER_CONTEXT:/}
  tomcat:
    remoteip:
      remote_ip_header: ${SERVER_TOMCAT_REMOTE_IP_HEADER:x-forwarded-for}
      protocol_header: ${SERVER_TOMCAT_PROTOCOL_HEADER:x-forwarded-proto}
  max-http-request-header-size: 32000
  error:
    include-stacktrace: never

# Spring configuration
spring:
  application:
    name: db-sts
  sql:
    init:
      schema-locations: classpath:schema-${spring.sql.init.platform}.sql
      mode: always
      platform: ${JDBC_PLATFORM:h2}
  datasource:
    driverClassName: ${JDBC_DRIVER:org.h2.Driver}
    password: ${JDBC_PASS:password}
    username: ${JDBC_USER:sa}
    url: ${JDBC_URL:jdbc:h2:file:./data/db}

# adapters
adapter:
  connection:
    driverClassName: ${CONNECTION_DRIVER:org.postgresql.Driver}
    password: ${CONNECTION_PASS:}
    username: ${CONNECTION_USER:}
    url: ${CONNECTION_URL:}
    platform: ${CONNECTION_PLATFORM:postgresql}
    policy: ${CONNECTION_POLICY:expire}
  postgresql:
    database: ${POSTGRES_DATABASE:}

# Application
application:
  endpoint: ${STS_ENDPOINT:http://${server.host}:${server.port}}
  name: "@project.name@"
  description: "@project.description@"
  version: "@project.version@"
logging:
  level:
    ROOT: INFO
    it.smartcommunitylab: ${LOG_LEVEL:INFO}

# STS
sts:
  credentials:
    duration: ${STS_CREDENTIALS_DURATION:28800}
    roles: ${STS_CREDENTIALS_ROLES:}
    password-length: ${STS_CREDENTIALS_PWD_LENGTH:12}
  client:
    client-id: ${STS_CLIENT_ID:}
    client-secret: ${STS_CLIENT_SECRET:}
  jwt:
    issuer-uri: ${STS_JWT_ISSUER_URI:}
    audience: ${STS_JWT_AUDIENCE:sts}
    claim: ${STS_JWT_CLAIM:roles}
